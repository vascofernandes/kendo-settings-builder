{"version":3,"sources":["webpack:///kendo-settings-builder.min.js","webpack:///webpack/bootstrap 342943bd3fa729715855","webpack:///./src/index.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","ModelDescriptorFieldType_1","e","Error","code","ModelColumnDescriptor_1","GridBuilder_1","CustomerType","ModelTypeExtractor","ModelTypeExtractor.constructor","ModelTypeExtractor.getType","CustomerType.constructor","_a","modelColumn","ModelColumnDescriptor","ModelDescriptorFieldType","Number","String","GridBuilder","Columns","columns","Bound","model","Id","Title","Name","DataSource","ds","Schema","AddField","name","Ajax","Read","op","Action","Height","Scrollable","sc","Enabled","Virtual"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GExChC,GAAAW,GAAAX,GAAyC,cAAAY,GAAA,GAAAC,OAAA,sDAAAD,GAAAE,KAAA,mBAAAF,MACzCG,EAAAf,GAAsC,cAAAY,GAAA,GAAAC,OAAA,mDAAAD,GAAAE,KAAA,mBAAAF,MACtCI,EAAAhB,GAA4B,cAAAY,GAAA,GAAAC,OAAA,yCAAAD,GAAAE,KAAA,mBAAAF,MAsB5BK,GAhBA,WAEIC,WAAoBA,GAAAC,aAOxBD,MAHIA,8BAAQA,GACJE,MAAOA,MAAKA,MAAMA,MAAMA,IAEhCF,KAOA,WAAAD,aACII,YAAQA,KACJA,EAACA,EAAaA,IAAKA,2BAAyBA,OAC5CA,EAACA,EAAaA,MAAOA,2BAAyBA,OFiCzCC,EAEJ,IAAIA,GE9BbL,MAFWA,MAAKA,KACLA,OAAOA,OAClBA,MAaIM,GACA,GAAIR,GAAAS,sBAAsB,KAAM,aAAcb,EAAAc,yBAAyBC,QACvE,GAAIX,GAAAS,sBAAsB,OAAQ,eAAgBb,EAAAc,yBAAyBE,UAG/E,GAAIX,GAAAY,aACCC,QAAQZ,EAAc,SAACa,GACpBA,EAAQC,MAAM,SAACC,GAAyB,MAAAA,GAAMC,KAAIC,MAAM,eACxDJ,EAAQC,MAAM,SAACC,GAAyB,MAAAA,GAAMG,OAAMD,MAAM,mBAE7DE,WAAW,SAACC,GAA4BA,EACpCC,OAAO,SAACN,GAAoCA,EACxCO,SAAS,KAAM5B,EAAAc,yBAAyBC,QACxCa,SAAS,OAAQ5B,EAAAc,yBAAyBE,UAE9CW,QACGjC,GAAIM,EAAAc,yBAAyBC,OAC7Bc,KAAM7B,EAAAc,yBAAyBE,SAElCW,OAAOf,GACPe,OAAOrB,GACPwB,OACAC,KAAK,SAACC,GAA6B,MAAAA,GAAGC,OAAO,aAEjDC,OAAO,KACPC,WAAW,SAACC,GAAoCA,EAC5CC,SAAQ,GACRH,OAAO,KACPI,SAAQ","file":"kendo-settings-builder.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../typings/tsd.d.ts\" />\n\tvar ModelDescriptorFieldType_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"ModelDescriptorFieldType\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\tvar ModelColumnDescriptor_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"ModelColumnDescriptor\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\tvar GridBuilder_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"GridBuilder\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\tvar ModelTypeExtractor = (function () {\n\t    function ModelTypeExtractor(model) {\n\t        this.model = model;\n\t    }\n\t    ModelTypeExtractor.prototype.getType = function (property) {\n\t        return this.model.Types[property];\n\t    };\n\t    return ModelTypeExtractor;\n\t})();\n\tvar CustomerType = (function () {\n\t    function CustomerType() {\n\t        this.Types = (_a = {},\n\t            _a[CustomerType.Id] = ModelDescriptorFieldType_1.ModelDescriptorFieldType.Number,\n\t            _a[CustomerType.Name] = ModelDescriptorFieldType_1.ModelDescriptorFieldType.String,\n\t            _a\n\t        );\n\t        var _a;\n\t    }\n\t    CustomerType.Id = 'id';\n\t    CustomerType.Name = 'name';\n\t    return CustomerType;\n\t})();\n\t/*\n\tvar customerModelTypesExtractor = new ModelTypeExtractor(new CustomerType);\n\t\n\tvar idType = customerModelTypesExtractor.getType(CustomerType.Id)\n\t\n\tvar columns = [{\n\t    field: CustomerType.Id,\n\t    title: 'Customer Id'\n\t}];\n\t*/\n\tvar modelColumn = [\n\t    new ModelColumnDescriptor_1.ModelColumnDescriptor('id', 'Cusomer Id', ModelDescriptorFieldType_1.ModelDescriptorFieldType.Number),\n\t    new ModelColumnDescriptor_1.ModelColumnDescriptor('name', 'Cusomer Name', ModelDescriptorFieldType_1.ModelDescriptorFieldType.String),\n\t];\n\tnew GridBuilder_1.GridBuilder()\n\t    .Columns(CustomerType, function (columns) {\n\t    columns.Bound(function (model) { return model.Id; }).Title('Customer Id');\n\t    columns.Bound(function (model) { return model.Name; }).Title('Customer Name');\n\t})\n\t    .DataSource(function (ds) {\n\t    ds\n\t        .Schema(function (model) {\n\t        model\n\t            .AddField('id', ModelDescriptorFieldType_1.ModelDescriptorFieldType.Number)\n\t            .AddField('name', ModelDescriptorFieldType_1.ModelDescriptorFieldType.String);\n\t    })\n\t        .Schema({\n\t        id: ModelDescriptorFieldType_1.ModelDescriptorFieldType.Number,\n\t        name: ModelDescriptorFieldType_1.ModelDescriptorFieldType.String\n\t    })\n\t        .Schema(modelColumn)\n\t        .Schema(CustomerType)\n\t        .Ajax()\n\t        .Read(function (op) { return op.Action('myurl'); });\n\t})\n\t    .Height(400)\n\t    .Scrollable(function (sc) {\n\t    sc\n\t        .Enabled(true)\n\t        .Height(200)\n\t        .Virtual(true);\n\t});\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** kendo-settings-builder.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 342943bd3fa729715855\n **/","/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport { ITyped } from 'Interfaces';\nimport { DataSourceBuilder } from 'DataSourceBuilder';\nimport { ModelDescriptorFieldType } from 'ModelDescriptorFieldType';\nimport { ModelColumnDescriptor } from 'ModelColumnDescriptor';\nimport { GridBuilder } from 'GridBuilder';\nimport { GridColumnFactory } from 'GridColumnFactory';\nimport { ModelDescriptorBuilder } from 'ModelDescriptorBuilder';\nimport { CrudOperationBuilder } from 'CrudOperationBuilder';\nimport { GridScrollSettingsBuilder } from 'GridScrollSettingsBuilder';\n\nclass ModelTypeExtractor {\n\n    constructor(private model: ITyped) {\n\n    }\n\n    getType(property: string) {\n        return this.model.Types[property];\n    }\n}\n\ninterface ICustomerType {\n    Id: string;\n    Name: string;\n}\n\nclass CustomerType implements ITyped {\n    Types = {\n        [CustomerType.Id]: ModelDescriptorFieldType.Number,\n        [CustomerType.Name]: ModelDescriptorFieldType.String,\n    };\n\n    static Id = 'id';\n    static Name = 'name';\n}\n\n/*\nvar customerModelTypesExtractor = new ModelTypeExtractor(new CustomerType);\n\nvar idType = customerModelTypesExtractor.getType(CustomerType.Id)\n\nvar columns = [{\n    field: CustomerType.Id,\n    title: 'Customer Id'\n}];\n*/\n\nvar modelColumn = [\n    new ModelColumnDescriptor('id', 'Cusomer Id', ModelDescriptorFieldType.Number),\n    new ModelColumnDescriptor('name', 'Cusomer Name', ModelDescriptorFieldType.String),\n];\n\nnew GridBuilder<ICustomerType>()\n    .Columns(CustomerType, (columns: GridColumnFactory<ICustomerType>) => {\n        columns.Bound((model: ICustomerType) => model.Id).Title('Customer Id');\n        columns.Bound((model: ICustomerType) => model.Name).Title('Customer Name');\n    })\n    .DataSource((ds: DataSourceBuilder) => { ds\n        .Schema((model: ModelDescriptorBuilder) => { model\n            .AddField('id', ModelDescriptorFieldType.Number)\n            .AddField('name', ModelDescriptorFieldType.String);\n        })\n        .Schema({\n            id: ModelDescriptorFieldType.Number,\n            name: ModelDescriptorFieldType.String\n        })\n        .Schema(modelColumn)\n        .Schema(CustomerType)\n        .Ajax()\n        .Read((op: CrudOperationBuilder) => op.Action('myurl'));\n    })\n    .Height(400)\n    .Scrollable((sc: GridScrollSettingsBuilder) => { sc\n        .Enabled(true)\n        .Height(200)\n        .Virtual(true);\n    });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/"],"sourceRoot":""}